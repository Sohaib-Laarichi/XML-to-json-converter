package xml_json;

public class XmlToJsonParser {
    public static void main(String[] args) throws ParseException {
        XmlToJsonParser parser = new XmlToJsonParser(System.in);
        parser.parse();
    }
}
PARSER_END(XmlToJsonParser)

SKIP : {
    " " | "\t" | "\n" | "\r"
}

TOKEN : {
    < OPEN_TAG: "<" > |
    < END_TAG: "</" > |
    < CLOSE_TAG: ">" > |
    < SELF_CLOSING_TAG: "/>" > |
    < EQUAL: "=" > |
    < IDENTIFIER: (<LETTER>)+ > |
    < STRING: "\"" (~["\""])* "\"" > |
    < TEXT: (~["<", ">"])+ >
}

MORE : {
    < LETTER: ["a"-"z", "A"-"Z", "0"-"9", "_"] >
}

void parse() : {} {
    jsonObject()
}

void jsonObject() : {} {
    <OPEN_TAG>
    <IDENTIFIER> {
        System.out.print("{\"" + token.image + "\": ");
    }
    attributes()
    (
        <CLOSE_TAG>
        elements()
        <END_TAG>
        <IDENTIFIER> {
            if (!token.image.equals(token.image)) {
                throw new ParseException("Mismatched closing tag: " + token.image);
            }
        }
        <CLOSE_TAG> {
            System.out.print("}");
        }
        |
        <SELF_CLOSING_TAG> {
            System.out.print("\"\"}");
        }
    )
}

void attributes() : {
    boolean first = true;
} {
    (
        <IDENTIFIER> <EQUAL> <STRING> {
            if (!first) {
                System.out.print(", ");
            }
            System.out.print("\"@" + token.image + "\": " + token.next.image);
            first = false;
        }
    )*
}

void elements() : {
    boolean first = true;
} {
    (
        jsonObject() {
            if (!first) {
                System.out.print(", ");
            }
            first = false;
        }
        |
        <TEXT> {
            if (!first) {
                System.out.print(", ");
            }
            System.out.print("\"" + token.image.trim() + "\"");
            first = false;
        }
    )*
}